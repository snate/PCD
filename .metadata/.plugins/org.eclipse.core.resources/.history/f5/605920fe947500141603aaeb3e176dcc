import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Iterator;

/**
 * @author svalle
 *
 */
public class Test {
	private int rows;
	private int cols;
	private String content;
	private Pair[][] map; 
	private static class Pair {
		private int times = 1;
		private String letter;
		public Pair(String s) { letter = s; }
		public Pair(String s,int n) { letter = s; times = n; }
		public int increment() { return times; }
		public String toString() { return letter+times; }
		public String getLetter() { return letter; }
	};
	private ArrayList<Pair> encountered = new ArrayList<Pair>();
	private Path outcome = Paths.get("Test/test");
	
	public Path build(Path inputPath) {
		content = InputOutput.readContent(inputPath).get(0);
		setDim();
		map = new Pair[rows][cols];
		for(int i = 0; i < content.length() % cols; i++)
			content += " ";
		String[] lines = new String[rows];
		for(int i = 0; i < rows; i++) {
			lines[i] = content.substring(0+cols*i, cols*(i+1));
		}
		for(int i = 0; i < rows; i++)
			System.out.println(lines[i] + "|");
		make(lines);
		return outcome;
	}
	
	private void setDim() {
		int dim = content.length();
		boolean square = false;
		while(rows*rows < dim && !square) {
			rows++;
			if(rows*rows == dim) square = true;
		}
		if(dim > rows*(rows-1))
			cols = rows;
		else
			cols = rows--;
	}

	private void make(String[] lines) {
		String inputForMain = "";
		for(int i = 0; i < rows; i++)
			for(int j = 0; j < cols; j++) {
				String s = lines[i].substring(j,j+1);
				map[i][j] = getPair(s);	
			}
		//prima riga
		for(int i = 0; i < rows; i++)
			for(int j = 0; j < cols; j++) {
				inputForMain += map[i][j] + "\t";
				inputForMain += lines[i].charAt(j) + "\t";
				if(i == 0)
					inputForMain += "VUOTO" + "\t";
				else
					inputForMain += map[i-1][j] + "\t";
				if(j == cols-1)
					inputForMain += "VUOTO" + "\t";
				else
					inputForMain += map[i][j+1] + "\t";
				if(i == rows-1)
					inputForMain += "VUOTO" + "\t";
				else
					inputForMain += map[i+1][j] + "\t";
				if(j == 0)
					inputForMain += "VUOTO" + "\t";
				else
					inputForMain += map[i][j-1];
				if(i < rows-1 || j < cols-1)
					inputForMain += "\n";
		}
		System.out.println(inputForMain);
		InputOutput.writeContent(outcome,inputForMain);
	}
	
	private Pair getPair(String s) {
		Iterator<Pair> it = encountered.iterator();
		Pair p;
		while(it.hasNext()) {
			Pair p = it.next();
			if(s.equals(p.getLetter())) {
				p.increment();
				return p;	
			}
		}
		Pair p = new Pair(s);
		encountered.add(p);
		System.out.println(s);
		return p;
	}
	
	public static boolean check(Path outputPath) {
		return true;
	}
}
