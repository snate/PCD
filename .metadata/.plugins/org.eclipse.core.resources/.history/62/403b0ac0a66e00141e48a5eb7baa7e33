import java.util.ArrayList;
import java.util.Iterator;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;



/**
 * @author svalle
 *
 */
public class Puzzle implements GruppoOrdinabile {
	private int rows;
	private int cols;
	private class Pezzo implements Piece {
		private String id;
		private String north;
		private String south;
		private String east;
		private String west;
		private Piece northRef;
		private Piece southRef;
		private Piece westRef;
		private Piece eastRef;

		public String getId()      { return id; }
		public String getNorth()   { return north; }
		public String getSouth()   { return south; }
		public String getWest()    { return west; }
		public String getEast()    { return east;	}
		public Piece getNorthRef() { return northRef; }
		public void setNorthRef(Piece p) {northRef = p;}
		public Piece getSouthRef() { return southRef; }
		public void setSouthRef(Piece p) {southRef = p;}
		public Piece getWestRef()  { return westRef;  }
		public void setWestRef(Piece p) {westRef = p;}
		public Piece getEastRef()  { return eastRef;  }
		public void setEastRef(Piece p) {eastRef = p;}
	}

	private Mucchio lista;
	private Piece[][] puzz;
	
	private Piece getPiecePuzz(String id) {
		for(int i=0;i<rows;i++) {
			for(int j=0;j<cols;j++) {
				Piece current = puzz[i][j]; 
				if(current.getId()==id)
					return current;
			}
		}
		return null;
	}
	
	
	@Override
	public void fill(Path path) {
		lista.fill(path);
	}
	
	@Override
	public void sort() {
		//fai cose
	}
	
	@Override
	public void write(Path path) {
		//scrivi
	}
}
